version: "3.9"

services:

  mysql8:
    container_name: mysql8
    image: mysql:8
    ports:
      - "3306:3306"
    networks:
      - spring
    environment:
      MYSQL_ROOT_PASSWORD: 1003
      MYSQL_DATABASE: db_gateway
    volumes:
      - data-mysql:/var/lib/mysql
    restart: always

  postgres14:
    container_name: postgres14
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    networks:
      - spring
    environment:
      POSTGRES_PASSWORD: 1003
      POSTGRES_DB: db_realstate
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always #when start docker app, container postgres14 is created

  ms-eureka-server:
    container_name: ms-eureka-server
    image: devcoderjava/ms-eureka-server
    ports:
      - "6666:6666"
    networks:
      - spring
    restart: always

  ms-api-gateway:
    container_name: ms-api-gateway
    image: devcoderjava/ms-api-gateway
    ports:
      - "5555:5555"
    networks:
      - spring
    restart: always
    depends_on:
      mysql8:
        condition: service_started
      ms-eureka-server:
        condition: service_started

  ms-purchase:
    container_name: ms-purchase
    image: devcoderjava/ms-purchase
    ports:
      - "4444:4444"
    networks:
      - spring
    restart: always
    depends_on:
      ms-eureka-server:
        condition: service_started

  ms-real-state:
    container_name: ms-real-state
    image: devcoderjava/ms-real-state
    ports:
      - "3333:3333"
    networks:
      - spring
    restart: always
    depends_on:
      postgres14:
        condition: service_started
      ms-eureka-server:
        condition: service_started

volumes:
  data-mysql:
    name: data-mysql
  data-postgres:
    name: data-postgres

networks:
  spring:
    name: spring
